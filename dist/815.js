"use strict";(self.webpackChunklavender_medical=self.webpackChunklavender_medical||[]).push([[815,7184],{92644:function(t,n,e){var i=e(87537),s=e.n(i),o=e(23645),a=e.n(o)()(s());a.push([t.id,".ql-mention-list-container {\n  width: 270px;\n  border: 1px solid #F0F0F0;\n  border-radius: 4px;\n  background-color: #FFFFFF;\n  box-shadow: 0 2px 12px 0 rgba(30, 30, 30, 0.08);\n  z-index: 9001;\n}\n\n.ql-mention-list {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n}\n\n.ql-mention-list-item {\n  cursor: pointer;\n  height: 44px;\n  line-height: 44px;\n  font-size: 16px;\n  padding: 0 20px;\n  vertical-align: middle;\n}\n\n.ql-mention-list-item.selected {\n  background-color: #D3E1EB;\n  text-decoration: none;\n}\n\n.mention {\n  height: 24px;\n  width: 65px;\n  border-radius: 6px;\n  background-color: #D3E1EB;\n  padding: 3px 0;\n}\n\n.mention>span {\n  margin: 0 3px;\n}","",{version:3,sources:["webpack://./node_modules/quill-mention/src/quill.mention.css"],names:[],mappings:"AAAA;EACE,YAAY;EACZ,yBAAyB;EACzB,kBAAkB;EAClB,yBAAyB;EACzB,+CAA+C;EAC/C,aAAa;AACf;;AAEA;EACE,gBAAgB;EAChB,SAAS;EACT,UAAU;EACV,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,YAAY;EACZ,iBAAiB;EACjB,eAAe;EACf,eAAe;EACf,sBAAsB;AACxB;;AAEA;EACE,yBAAyB;EACzB,qBAAqB;AACvB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,yBAAyB;EACzB,cAAc;AAChB;;AAEA;EACE,aAAa;AACf",sourcesContent:[".ql-mention-list-container {\n  width: 270px;\n  border: 1px solid #F0F0F0;\n  border-radius: 4px;\n  background-color: #FFFFFF;\n  box-shadow: 0 2px 12px 0 rgba(30, 30, 30, 0.08);\n  z-index: 9001;\n}\n\n.ql-mention-list {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n}\n\n.ql-mention-list-item {\n  cursor: pointer;\n  height: 44px;\n  line-height: 44px;\n  font-size: 16px;\n  padding: 0 20px;\n  vertical-align: middle;\n}\n\n.ql-mention-list-item.selected {\n  background-color: #D3E1EB;\n  text-decoration: none;\n}\n\n.mention {\n  height: 24px;\n  width: 65px;\n  border-radius: 6px;\n  background-color: #D3E1EB;\n  padding: 3px 0;\n}\n\n.mention>span {\n  margin: 0 3px;\n}"],sourceRoot:""}]),n.Z=a},23645:function(t){t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var e="",i=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),i&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=t(n),i&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(t,e,i,s,o){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(i)for(var r=0;r<this.length;r++){var h=this[r][0];null!=h&&(a[h]=!0)}for(var l=0;l<t.length;l++){var d=[].concat(t[l]);i&&a[d[0]]||(void 0!==o&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=o),e&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=e):d[2]=e),s&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=s):d[4]="".concat(s)),n.push(d))}},n}},87537:function(t){t.exports=function(t){var n=t[1],e=t[3];if(!e)return n;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),o="/*# ".concat(s," */"),a=e.sources.map((function(t){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(t," */")}));return[n].concat(a).concat([o]).join("\n")}return[n].join("\n")}},57125:function(t){t.exports=function(t){return t!=t}},10815:function(t,n,e){e.r(n),e.d(n,{default:function(){return k}});var i=e(76095),s=e.n(i),o=9,a=13,r=27,h=38,l=40,d=e(93379),c=e.n(d),u=e(7795),p=e.n(u),m=e(90569),f=e.n(m),C=e(3565),g=e.n(C),A=e(19216),x=e.n(A),b=e(44589),v=e.n(b),y=e(92644),E={};E.styleTagTransform=v(),E.setAttributes=g(),E.insert=f().bind(null,"head"),E.domAPI=p(),E.insertStyleElement=x(),c()(y.Z,E),y.Z&&y.Z.locals&&y.Z.locals;const I=s().import("blots/embed");class B extends I{static create(t){const n=super.create(),e=document.createElement("span");return e.className="ql-mention-denotation-char",e.innerHTML=t.denotationChar,n.appendChild(e),n.innerHTML+=t.value,B.setDataValues(n,t)}static setDataValues(t,n){const e=t;return Object.keys(n).forEach((t=>{e.dataset[t]=n[t]})),e}static value(t){return t.dataset}}B.blotName="mention",B.tagName="span",B.className="mention",s().register(B);const M=e(57125);class L{constructor(t,n){this.isOpen=!1,this.itemIndex=0,this.mentionCharPos=null,this.cursorPos=null,this.values=[],this.suspendMouseEnter=!1,this.quill=t,this.options={source:null,renderItem(t,n){return`${t.value}`},onSelect(t,n){n(t)},mentionDenotationChars:["@"],showDenotationChar:!0,allowedChars:/^[a-zA-Z0-9_]*$/,minChars:0,maxChars:31,offsetTop:2,offsetLeft:0,isolateCharacter:!1,fixMentionsToQuill:!1,defaultMenuOrientation:"bottom",dataAttributes:["id","value","denotationChar","link","target"],linkTarget:"_blank",onOpen(){return!0},onClose(){return!0},listItemClass:"ql-mention-list-item",mentionContainerClass:"ql-mention-list-container",mentionListClass:"ql-mention-list"},Object.assign(this.options,n,{dataAttributes:Array.isArray(n.dataAttributes)?this.options.dataAttributes.concat(n.dataAttributes):this.options.dataAttributes}),this.mentionContainer=document.createElement("div"),this.mentionContainer.className=this.options.mentionContainerClass?this.options.mentionContainerClass:"",this.mentionContainer.style.cssText="display: none; position: absolute;",this.mentionContainer.onmousemove=this.onContainerMouseMove.bind(this),this.options.fixMentionsToQuill&&(this.mentionContainer.style.width="auto"),this.mentionList=document.createElement("ul"),this.mentionList.className=this.options.mentionListClass?this.options.mentionListClass:"",this.mentionContainer.appendChild(this.mentionList),this.quill.container.appendChild(this.mentionContainer),t.on("text-change",this.onTextChange.bind(this)),t.on("selection-change",this.onSelectionChange.bind(this)),t.keyboard.addBinding({key:o},this.selectHandler.bind(this)),t.keyboard.bindings[9].unshift(t.keyboard.bindings[9].pop()),t.keyboard.addBinding({key:a},this.selectHandler.bind(this)),t.keyboard.bindings[13].unshift(t.keyboard.bindings[13].pop()),t.keyboard.addBinding({key:r},this.escapeHandler.bind(this)),t.keyboard.addBinding({key:h},this.upHandler.bind(this)),t.keyboard.addBinding({key:l},this.downHandler.bind(this))}selectHandler(){return!this.isOpen||(this.selectItem(),!1)}escapeHandler(){return!this.isOpen||(this.hideMentionList(),!1)}upHandler(){return!this.isOpen||(this.prevItem(),!1)}downHandler(){return!this.isOpen||(this.nextItem(),!1)}showMentionList(){this.mentionContainer.style.visibility="hidden",this.mentionContainer.style.display="",this.setMentionContainerPosition(),this.setIsOpen(!0)}hideMentionList(){this.mentionContainer.style.display="none",this.setIsOpen(!1)}highlightItem(t=!0){for(let t=0;t<this.mentionList.childNodes.length;t+=1)this.mentionList.childNodes[t].classList.remove("selected");if(this.mentionList.childNodes[this.itemIndex].classList.add("selected"),t){const t=this.mentionList.childNodes[this.itemIndex].offsetHeight,n=this.itemIndex*t,e=this.mentionContainer.scrollTop,i=e+this.mentionContainer.offsetHeight;n<e?this.mentionContainer.scrollTop=n:n>i-t&&(this.mentionContainer.scrollTop+=n-i+t)}}getItemData(){const{link:t}=this.mentionList.childNodes[this.itemIndex].dataset,n=void 0!==t,e=this.mentionList.childNodes[this.itemIndex].dataset.target;return n&&(this.mentionList.childNodes[this.itemIndex].dataset.value=`<a href="${t}" target=${e||this.options.linkTarget}>${this.mentionList.childNodes[this.itemIndex].dataset.value}`),this.mentionList.childNodes[this.itemIndex].dataset}onContainerMouseMove(){this.suspendMouseEnter=!1}selectItem(){const t=this.getItemData();this.options.onSelect(t,(t=>{this.insertItem(t)})),this.hideMentionList()}insertItem(t){const n=t;null!==n&&(this.options.showDenotationChar||(n.denotationChar=""),this.quill.deleteText(this.mentionCharPos,this.cursorPos-this.mentionCharPos,s().sources.USER),this.quill.insertEmbed(this.mentionCharPos,"mention",n,s().sources.USER),this.quill.insertText(this.mentionCharPos+1," ",s().sources.USER),this.quill.setSelection(this.mentionCharPos+2,s().sources.USER),this.hideMentionList())}onItemMouseEnter(t){if(this.suspendMouseEnter)return;const n=Number(t.target.dataset.index);M(n)||n===this.itemIndex||(this.itemIndex=n,this.highlightItem(!1))}onItemClick(t){t.stopImmediatePropagation(),t.preventDefault(),this.itemIndex=t.currentTarget.dataset.index,this.highlightItem(),this.selectItem()}attachDataValues(t,n){const e=t;return Object.keys(n).forEach((t=>{this.options.dataAttributes.indexOf(t)>-1?e.dataset[t]=n[t]:delete e.dataset[t]})),e}renderList(t,n,e){if(n&&n.length>0){this.values=n,this.mentionList.innerHTML="";for(let i=0;i<n.length;i+=1){const s=document.createElement("li");s.className=this.options.listItemClass?this.options.listItemClass:"",s.dataset.index=i,s.innerHTML=this.options.renderItem(n[i],e),s.onmouseenter=this.onItemMouseEnter.bind(this),s.dataset.denotationChar=t,s.onclick=this.onItemClick.bind(this),this.mentionList.appendChild(this.attachDataValues(s,n[i]))}this.itemIndex=0,this.highlightItem(),this.showMentionList()}else this.hideMentionList()}nextItem(){this.itemIndex=(this.itemIndex+1)%this.values.length,this.suspendMouseEnter=!0,this.highlightItem()}prevItem(){this.itemIndex=(this.itemIndex+this.values.length-1)%this.values.length,this.suspendMouseEnter=!0,this.highlightItem()}hasValidChars(t){return this.options.allowedChars.test(t)}containerBottomIsNotVisible(t,n){return t+this.mentionContainer.offsetHeight+n.top>window.pageYOffset+window.innerHeight}containerRightIsNotVisible(t,n){return!this.options.fixMentionsToQuill&&t+this.mentionContainer.offsetWidth+n.left>window.pageXOffset+document.documentElement.clientWidth}setIsOpen(t){this.isOpen!==t&&(t?this.options.onOpen():this.options.onClose(),this.isOpen=t)}setMentionContainerPosition(){const t=this.quill.container.getBoundingClientRect(),n=this.quill.getBounds(this.mentionCharPos),e=this.mentionContainer.offsetHeight;let i=this.options.offsetTop,s=this.options.offsetLeft;if(this.options.fixMentionsToQuill){const t=0;this.mentionContainer.style.right=`${t}px`}else s+=n.left;if(this.containerRightIsNotVisible(s,t)){const n=this.mentionContainer.offsetWidth+this.options.offsetLeft;s=t.width-n}if("top"===this.options.defaultMenuOrientation){if(i=this.options.fixMentionsToQuill?-1*(e+this.options.offsetTop):n.top-(e+this.options.offsetTop),i+t.top<=0){let e=this.options.offsetTop;this.options.fixMentionsToQuill?e+=t.height:e+=n.bottom,i=e}}else if(this.options.fixMentionsToQuill?i+=t.height:i+=n.bottom,this.containerBottomIsNotVisible(i,t)){let t=-1*this.options.offsetTop;this.options.fixMentionsToQuill||(t+=n.top),i=t-e}this.mentionContainer.style.top=`${i}px`,this.mentionContainer.style.left=`${s}px`,this.mentionContainer.style.visibility="visible"}onSomethingChange(){const t=this.quill.getSelection();if(null==t)return;this.cursorPos=t.index;const n=Math.max(0,this.cursorPos-this.options.maxChars),e=this.quill.getText(n,this.cursorPos-n),i=this.options.mentionDenotationChars.reduce(((t,n)=>{const i=t,s=e.lastIndexOf(n);return s>i?s:i}),-1);if(i>-1){if(this.options.isolateCharacter&&0!==i&&!e[i-1].match(/\s/g))return void this.hideMentionList();const t=this.cursorPos-(e.length-i);this.mentionCharPos=t;const n=e.substring(i+1);if(n.length>=this.options.minChars&&this.hasValidChars(n)){const t=e[i];this.options.source(n,this.renderList.bind(this,t),t)}else this.hideMentionList()}else this.hideMentionList()}onTextChange(t,n,e){"user"===e&&this.onSomethingChange()}onSelectionChange(t){t&&0===t.length?this.onSomethingChange():this.hideMentionList()}}s().register("modules/mention",L);var k=L},93379:function(t){var n=[];function e(t){for(var e=-1,i=0;i<n.length;i++)if(n[i].identifier===t){e=i;break}return e}function i(t,i){for(var o={},a=[],r=0;r<t.length;r++){var h=t[r],l=i.base?h[0]+i.base:h[0],d=o[l]||0,c="".concat(l," ").concat(d);o[l]=d+1;var u=e(c),p={css:h[1],media:h[2],sourceMap:h[3],supports:h[4],layer:h[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var m=s(p,i);i.byIndex=r,n.splice(r,0,{identifier:c,updater:m,references:1})}a.push(c)}return a}function s(t,n){var e=n.domAPI(n);return e.update(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap&&n.supports===t.supports&&n.layer===t.layer)return;e.update(t=n)}else e.remove()}}t.exports=function(t,s){var o=i(t=t||[],s=s||{});return function(t){t=t||[];for(var a=0;a<o.length;a++){var r=e(o[a]);n[r].references--}for(var h=i(t,s),l=0;l<o.length;l++){var d=e(o[l]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}o=h}}},90569:function(t){var n={};t.exports=function(t,e){var i=function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}n[t]=e}return n[t]}(t);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(e)}},19216:function(t){t.exports=function(t){var n=document.createElement("style");return t.setAttributes(n,t.attributes),t.insert(n,t.options),n}},3565:function(t,n,e){t.exports=function(t){var n=e.nc;n&&t.setAttribute("nonce",n)}},7795:function(t){t.exports=function(t){var n=t.insertStyleElement(t);return{update:function(e){!function(t,n,e){var i="";e.supports&&(i+="@supports (".concat(e.supports,") {")),e.media&&(i+="@media ".concat(e.media," {"));var s=void 0!==e.layer;s&&(i+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),i+=e.css,s&&(i+="}"),e.media&&(i+="}"),e.supports&&(i+="}");var o=e.sourceMap;o&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(i,t,n.options)}(n,t,e)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)}}}},44589:function(t){t.exports=function(t,n){if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,